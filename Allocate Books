bool isPossible(vector<int>& arr, int n, int m , int mid){
  
  int StudentCount = 1;
  int PageSum = 0;

  for(int i=0; i<n; i++){
    if( PageSum + arr[i] <= mid)
    {
        PageSum += arr[i];
    }
    else
    {
      StudentCount ++;
      if(StudentCount > m || arr[i] > mid)
      {
        return false;
      }
      PageSum = arr[i];
    }
  }
  return true;
}

int findPages(vector<int>& arr, int n, int m) {
    
    if( m> n){
      return -1;
    }
    int s = 0;  //s= start
    int sum = 0;  //sum of pages 
    
    for (int i = 0; i<n; i++) //total sum
    {
      sum += arr[i];
    } 
    int e = sum;  //e = end
    int ans = -1;
    int mid = s+ (e-s)/2;  

     // applying binary search in search space

    while(s <= e){
      if ( isPossible(arr, n, m,mid)) {
         ans = mid;
         e = mid-1;
      }
       else 
      {
        s = mid + 1;
      }
      mid = s + (e - s) / 2;
    }
    return ans;
}
