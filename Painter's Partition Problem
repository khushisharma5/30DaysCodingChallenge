bool isPossible(vector<int> &boards, int k, int mid){

    int pcount = 1;

    int boardsum = 0;

    int n = boards.size();

    for(int i = 0; i < n; i++){

        if(boardsum + boards[i] <= mid){

            boardsum += boards[i];

        }

        else {

            pcount++;

            if(pcount > k || boards[i] > mid){

                return false;

            }

            boardsum = boards[i];

        }

    }

    return true;

}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int start = 0;

    int sum = 0;

    int n = boards.size();

    for(int i = 0; i < n; i++){

        sum += boards[i];

    }

    int end = sum;

    int mid = start + (end - start)/2;

    int ans = -1;

 

    while(start <= end){

        if(isPossible(boards, k, mid)){

            ans = mid;

            end = mid - 1;

        }

        else {

            start = mid + 1;

        }

        mid = start + (end - start)/2;

    }

    return ans; 
}
