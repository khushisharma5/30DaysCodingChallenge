class Solution {
int firstOcc(vector<int>& arr,int target){
    int s=0, e=arr.size()-1;
    int ans =-1;
    int mid = s+(e-s)/2;

    while(s<=e){
        if(arr[mid] == target){
            ans= mid;
            e = mid-1;
        }
        else if(arr[mid] < target){
            s = mid+1;
        }
        else{
           e = mid-1;
        }
        mid = s+(e-s)/2;
    }
    return ans;
}

int lastOcc(vector<int>& arr,int target){
    int s=0, e=arr.size()-1;
    int ans =-1;
    int mid = s+(e-s)/2;

    while(s<=e){
        if(arr[mid] == target){
            ans= mid;
           s = mid+1;
        }
        else if(arr[mid] < target){
            s = mid+1;
        }
        else{
           e = mid-1;
        }
        mid = s+(e-s)/2;
    }
    return ans;
}
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        
        return{firstOcc(nums, target) , lastOcc(nums, target)};
    }
};

/* pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    pair<int,int> p;
    p.first = firstOcc(arr, n, k);
    p.second = lastOcc(arr,n, k);

    return p;
    
} */ another method to print two integer values using pair<int, int> 
