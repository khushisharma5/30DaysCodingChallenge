int search(vector<int>& arr, int n, int k)
{
     int low=0,high = n-1;

    while(low <= high){
        int mid = (low+high)/2;

        if (arr[mid] == k) {
          return mid;
        }
        // after finding the mid there always be one part witch is sorted

          if(arr[low] <= arr[mid]){ //left part is sorted

            if(arr[low] <= k && k <= arr[mid])
            {
            //target is present in sorted part
                high = mid-1;
            }
            else { //target is present in unsorted part
                low = mid+1;
            }
        }
        else { // right part is sorted

            if(arr[mid] <= k && k <= arr[high]){ //target is present in sorted part

                low = mid+1;
        }else { //target is present in unsorted part
                  high = mid-1;
            }
        }

    }
return -1;
}
