class Solution {
public:
    int compress(vector<char>& chars) {
        
        int i =0;
        int ansIndex = 0;
        int n = chars.size();
        
        while(i < n){
            int j =i+1;
            while(j < n && chars[i] == chars[j]){
                j++;
            }
            
            //case1 : vector traversal came to end index
            // case2 : new/different character encountered
            // store old character
            chars[ansIndex++] = chars[i];
            
            int count = j-i; // j here represents the new character
            
            if(count > 1){
                // converting count into single digit and saving in answer
                string cnt = to_string(count);
                for(char ch: cnt)
                {
                    chars[ansIndex++] =ch;
                }
            }
            // moving to diff/new character
            i=j;
        }
        return ansIndex;
    }
};
